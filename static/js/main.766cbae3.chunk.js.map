{"version":3,"sources":["components/header/header.jsx","components/formStyles.jsx","components/todo-item/todo-item.jsx","components/todo-list/todo-list.jsx","components/add-item-form/add-item-form.jsx","components/update-item-form/update-item-form.jsx","components/filter-buttons/filter-buttons.jsx","components/manage-complete-buttons/manage-complete-buttons.jsx","components/app/app.jsx","index.js"],"names":["Title","styled","h1","Header","StyledForm","form","StyledInput","input","StyledButton","button","StyledLabel","label","StyledCheck","i","Form","props","Input","Button","Label","IconCheck","ItemList","li","IconEdit","delete","ToggleDisabled","div","disabled","TodoItem","title","completed","edit","handleComplete","handleEdit","handleDelete","activeClass","disabledButtons","className","onClick","TodoList","data","list","map","item","id","key","length","AddItemForm","state","handleInputChange","e","setState","target","value","handleSubmit","preventDefault","onAddItem","this","onSubmit","type","placeholder","onChange","Component","UpdateButton","UpdateItemForm","inputRef","React","createRef","HandleSubmit","onEditItem","updatedInput","current","focus","defaultValue","editTitle","name","ref","update","active","Amount","sup","FilterButtons","activeFilter","handleFilter","totalCount","completedCount","buttons","amount","ManageButtons","CheckAll","IconCheckSmall","ClearButton","IconClear","ManageComplete","handleCheck","handleClear","Wrapper","TopBlock","ContentBlock","App","editId","index","findIndex","localStorage","setItem","JSON","stringify","filteredData","filter","getAttribute","handleAddItem","renderId","Date","newItem","newData","checkedData","uncompletedData","handleUpdate","slice","getData","getItem","parse","handleDataFilter","ReactDOM","render","document","getElementById"],"mappings":"qkBAGA,IAAMA,EAAQC,IAAOC,GAAV,KAkBIC,EANA,WACX,OACI,kBAACH,EAAD,sB,w6GCdR,IAAMI,EAAaH,IAAOI,KAAV,KAMVC,EAAcL,IAAOM,MAAV,KAqBXC,EAAeP,IAAOQ,OAAV,KAoCZC,EAAcT,IAAOU,MAAV,KAwBXC,EAAcX,IAAOY,EAAV,KAsBJC,EAAO,SAACC,GAAD,OAAW,kBAACX,EAAeW,IAClCC,EAAQ,SAACD,GAAD,OAAW,kBAACT,EAAgBS,IACpCE,EAAS,SAACF,GAAD,OAAW,kBAACP,EAAiBO,IACtCG,EAAQ,SAACH,GAAD,OAAW,kBAACL,EAAgBK,IACpCI,EAAY,SAACJ,GAAD,OAAW,kBAACH,EAAgBG,I,0pBChHrD,IAAMK,EAAWnB,IAAOoB,GAAV,KAWRC,EAAWrB,IAAOY,EAAV,KAOG,SAAAE,GAAK,OAAIA,EAAMQ,OAAS,UAAY,aAG/CC,EAAiBvB,IAAOwB,IAAV,KACE,SAAAV,GAAK,OAAIA,EAAMW,SAAW,OAAQ,SACzC,SAAAX,GAAK,OAAIA,EAAMW,SAAW,KAAM,OA0BhCC,EAvBE,SAAC,GAA0E,IAAxEC,EAAuE,EAAvEA,MAAOC,EAAgE,EAAhEA,UAAWC,EAAqD,EAArDA,KAAMC,EAA+C,EAA/CA,eAAgBC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,aAC9DC,EAAcL,EAAY,SAAW,GACrCM,EAAkBL,EAAO,WAAa,GAC5C,OACI,kBAACV,EAAD,KACI,kBAAC,EAAD,CAAOgB,UAAWF,EACXG,QAASN,EACTF,YAAcA,GACjB,kBAAC,EAAD,CAAWO,UAAU,gBACrB,8BAAOR,IAEX,kBAACJ,EAAD,CAAgBE,SAAUS,GACtB,4BAAQE,QAASL,GACb,kBAACV,EAAD,CAAUc,UAAU,gBAExB,4BAAQC,QAASJ,GACb,kBAACX,EAAD,CAAUC,QAAM,EAACa,UAAU,sB,yMC1C/C,IAAMhB,EAAWnB,IAAOoB,GAAV,KA8BCiB,EAtBE,SAAC,GAA8D,IAA5DC,EAA2D,EAA3DA,KAAMT,EAAqD,EAArDA,KAAMC,EAA+C,EAA/CA,eAAgBC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,aAClDO,EAAOD,EAAKE,KAAI,SAAAC,GAAS,IACnBC,EAAcD,EAAdC,GAAIf,EAAUc,EAAVd,MAEZ,OACI,kBAAC,EAAD,eAAUgB,IAAKD,EACLb,KAAMA,GACFY,EAFd,CAGUX,eAAgB,kBAAMA,EAAeY,IACrCX,WAAY,kBAAMA,EAAWW,EAAIf,IACjCK,aAAc,kBAAMA,EAAaU,UAGnD,OACI,yBAAKP,UAAU,aACX,4BACKI,EAAKK,OAAS,EAAIL,EAAO,kBAAC,EAAD,oBCzBrBM,E,2MACjBC,MAAQ,CACNnB,MAAO,I,EAGToB,kBAAoB,SAACC,GACjB,EAAKC,SAAS,CACVtB,MAAOqB,EAAEE,OAAOC,S,EAGxBC,aAAe,SAACJ,GACZA,EAAEK,iBAEF,EAAKJ,SAAS,CACVtB,MAAO,KAGX,EAAKb,MAAMwC,UAAU,EAAKR,MAAMnB,Q,wEAG1B,IACEA,EAAU4B,KAAKT,MAAfnB,MACR,OACI,yBAAKQ,UAAU,iBACX,kBAAC,EAAD,CAAMqB,SAAUD,KAAKH,cACjB,kBAAC,EAAD,CAAOK,KAAK,OACLN,MAAOxB,EACP+B,YAAY,iBACZC,SAAUJ,KAAKR,oBACtB,kBAAC,EAAD,uB,GA7BqBa,a,o1BCCzC,IAAMvD,EAAcL,IAAOM,MAAV,KAqBXuD,EAAe7D,YAAOgB,EAAPhB,CAAH,KAQG8D,E,2MACjBC,SAAWC,IAAMC,Y,EAKjBC,aAAe,SAAClB,GACZA,EAAEK,iBAEF,EAAKvC,MAAMqD,WAAWnB,EAAEE,OAAOkB,aAAajB,Q,mFAL5CI,KAAKQ,SAASM,QAAQC,U,+BAQtB,OACI,yBAAKnC,UAAU,iBACX,kBAAC,EAAD,CAAMqB,SAAWD,KAAKW,cAClB,kBAAC,EAAD,CAAaT,KAAK,OACXc,aAAchB,KAAKzC,MAAM0D,UACzBC,KAAK,eACLC,IAAMnB,KAAKQ,WAClB,kBAACF,EAAD,CAAcc,QAAM,GAApB,qB,GAnBwBf,a,qmBC9B5C,IAAM5C,EAAShB,IAAOQ,OAAV,KAUC,SAAAM,GAAK,OAAIA,EAAM8D,OAAS,UAAY,aACzB,SAAA9D,GAAK,OAAIA,EAAM8D,OAAS,OAAS,iBAUnDC,EAAS7E,IAAO8E,IAAV,KAyCGC,GApCO,SAAC,GAAgE,IAA9DC,EAA6D,EAA7DA,aAAcC,EAA+C,EAA/CA,aAAcC,EAAiC,EAAjCA,WAAYC,EAAqB,EAArBA,eACvDC,EAAU,CACZ,CACI1C,GAAI,MACJf,MAAO,MACP0D,OAAQH,GAEZ,CACIxC,GAAI,SACJf,MAAO,SACP0D,OAAQH,EAAaC,GAEzB,CACIzC,GAAI,YACJf,MAAO,YACP0D,OAAQF,IAGhB,OACI,yBAAKhD,UAAU,cACTiD,EAAQ5C,KAAI,YAA4B,IAAzBE,EAAwB,EAAxBA,GAAIf,EAAoB,EAApBA,MAAO0D,EAAa,EAAbA,OACxB,OACI,kBAAC,EAAD,CAAQ1C,IAAKD,EACLA,GAAIA,EACJP,UAAWO,IAAOsC,EAAe,SAAW,GAC5CJ,OAAQlC,IAAOsC,EACf5C,QAAS6C,GACZtD,EACD,kBAACkD,EAAD,KAASQ,S,kyBCrDjC,IAAMC,GAAgBtF,IAAOwB,IAAV,MAOb+D,GAAWvF,YAAOiB,EAAPjB,CAAH,MAQRwF,GAAiBxF,YAAOkB,EAAPlB,CAAH,MAGdyF,GAAczF,IAAOQ,OAAV,MASXkF,GAAY1F,IAAOY,EAAV,MA0BA+E,GArBQ,SAAC,GAA4D,IAA3DC,EAA0D,EAA1DA,YAAaC,EAA6C,EAA7CA,YAAaX,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,eACrDlD,EAAckD,IAAmBD,EAAa,SAAW,GAC/D,OACI,kBAACI,GAAD,KACMJ,EAAa,GACX,kBAACK,GAAD,CAAUpD,UAAWF,EACXG,QAASwD,GACf,kBAACJ,GAAD,CAAgBrD,UAAU,gBAF9B,mBAMFgD,EAAiB,GACf,kBAACM,GAAD,CAAarD,QAASyD,GAClB,kBAACH,GAAD,CAAWvD,UAAU,gBADzB,qB,u8BCrChB,IAAM2D,GAAU9F,IAAOwB,IAAV,MASPuE,GAAW/F,IAAOwB,IAAV,MAYRwE,GAAehG,IAAOwB,IAAV,MAMZc,GAAO,CACT,CACII,GAAI,EACJf,MAAO,qBACPC,WAAW,GAEf,CACIc,GAAI,EACJf,MAAO,qCACPC,WAAW,GAEf,CACIc,GAAI,EACJf,MAAO,uDACPC,WAAW,IAIEqE,G,2MACjBnD,MAAQ,CACJR,KAAM,GACN0C,aAAc,MACdnD,MAAM,EACNqE,OAAQ,KACR1B,UAAW,I,EAqBf1C,eAAiB,SAACY,GAAQ,IACdJ,EAAS,EAAKQ,MAAdR,KACF6D,EAAQ7D,EAAK8D,WAAU,SAAA3D,GAAI,OAAIA,EAAKC,KAAOA,KACjDJ,EAAK6D,GAAOvE,WAAaU,EAAK6D,GAAOvE,UAErC,EAAKqB,SAAS,CACVX,SAEJ+D,aAAaC,QAAQ,WAAYC,KAAKC,UAAUlE,K,EAEpDN,aAAe,SAACU,GACZ,IAAM+D,EAAe,EAAK3D,MAAMR,KAAKoE,QAAO,SAAAjE,GAAI,OAAIA,EAAKC,KAAOA,KAEhE,EAAKO,SAAS,CACVX,KAAMmE,IAEVJ,aAAaC,QAAQ,WAAYC,KAAKC,UAAUC,K,EAEpDxB,aAAe,SAACjC,GACZ,EAAKC,SAAS,CACV+B,aAAchC,EAAEE,OAAOyD,aAAa,S,EAY5CC,cAAgB,SAACjF,GACb,IAAMkF,GAAa,IAAIC,KACjBC,EAAU,CACZrE,GAAImE,EACJlF,MAAOA,EACPC,WAAW,GAEfmF,EAAQpE,IAAMkE,EAEd,IAAMG,EAAO,CAAID,GAAJ,mBAAgB,EAAKjE,MAAMR,OACpB,IAAjBX,EAAMiB,QACL,EAAKK,SAAS,CACVX,KAAM0E,IAGdX,aAAaC,QAAQ,WAAYC,KAAKC,UAAUQ,K,EAEpDpB,YAAc,WACV,IAAMqB,EAAc,EAAKnE,MAAMR,KAAKE,KAAI,SAAAC,GAEpC,OADAA,EAAKb,WAAY,EACVa,KAGX,EAAKQ,SAAS,CACVX,KAAM2E,IAEVZ,aAAaC,QAAQ,WAAYC,KAAKC,UAAUS,K,EAEpDpB,YAAc,WACV,IAAMqB,EAAkB,EAAKpE,MAAMR,KAAKoE,QAAO,SAAAjE,GAAI,OAAKA,EAAKb,aAE7D,EAAKqB,SAAS,CACVX,KAAM4E,IAEVb,aAAaC,QAAQ,WAAYC,KAAKC,UAAUU,K,EAEpDnF,WAAa,SAACW,EAAIf,GACd,EAAKsB,SAAS,CACVpB,MAAM,EACNqE,OAAQxD,EACR8B,UAAW7C,K,EAGnBwF,aAAe,SAACxF,GAAW,IAAD,EACG,EAAKmB,MAAtBR,EADc,EACdA,KAAM4D,EADQ,EACRA,OACRC,EAAQ7D,EAAK8D,WAAU,SAAA3D,GAAI,OAAIA,EAAKC,KAAOwD,KAE3Ca,E,2WAAO,IADGzE,EAAK6D,GACR,CAAgBxE,MAAOA,IAC9BqF,EAAO,sBACN,EAAKlE,MAAMR,KAAK8E,MAAM,EAAGjB,IADnB,CAETY,GAFS,YAGN,EAAKjE,MAAMR,KAAK8E,MAAMjB,EAAQ,KAGrC,EAAKlD,SAAS,CACVX,KAAM0E,EACNnF,MAAM,IAEVwE,aAAaC,QAAQ,WAAYC,KAAKC,UAAUQ,K,mFA3GhDzD,KAAK8D,Y,gCAIAhB,aAAaiB,QAAQ,YAOtB/D,KAAKN,SAAS,CACVX,KAAMiE,KAAKgB,MAAMlB,aAAaiB,QAAQ,gBAP1CjB,aAAaC,QAAQ,WAAYC,KAAKC,UAAL,UAAmBlE,MACpDiB,KAAKN,SAAS,CACVX,KAAK,GAAD,OAAMA,S,yCAiCF,IAAD,EACgBiB,KAAKT,MAA5BR,EADO,EACPA,KACR,OAFe,EACD0C,cAEV,IAAK,MAAQ,OAAO1C,EACpB,IAAK,YAAa,OAAOA,EAAKoE,QAAO,SAAAjE,GAAI,OAAIA,EAAKb,aAClD,IAAK,SAAU,OAAOU,EAAKoE,QAAO,SAAAjE,GAAI,OAAKA,EAAKb,aAChD,QAAS,OAAOU,K,+BAgEd,IAAD,EAC2CiB,KAAKT,MAA7CR,EADH,EACGA,KAAM0C,EADT,EACSA,aAAcnD,EADvB,EACuBA,KAAM2C,EAD7B,EAC6BA,UAC5BU,EAAa5C,EAAKM,OAClBuC,EAAiB7C,EAAKoE,QAAO,SAAAjE,GAAI,OAAIA,EAAKb,aAAWgB,OACvD6D,EAAelD,KAAKiE,mBAExB,OACI,kBAAC1B,GAAD,KACI,kBAACC,GAAD,KACI,kBAAC,EAAD,MACA,kBAAC,GAAD,CAAef,aAAcA,EACdC,aAAc1B,KAAK0B,aACnBC,WAAYA,EACZC,eAAgBA,KAEnC,kBAACa,GAAD,KACMnE,EACE,kBAAC,EAAD,CAAgBsC,WAAYZ,KAAK4D,aACjB3C,UAAWA,IACzB,kBAAC,EAAD,CAAalB,UAAWC,KAAKqD,gBAEnC,kBAAC,EAAD,CAAUtE,KAAMmE,EACN5E,KAAMA,EACNC,eAAgByB,KAAKzB,eACrBC,WAAYwB,KAAKxB,WACjBC,aAAcuB,KAAKvB,gBAEjC,kBAAC,GAAD,CAAgB4D,YAAarC,KAAKqC,YAClBC,YAAatC,KAAKsC,YAClBX,WAAYA,EACZC,eAAgBA,S,GAtJfvB,aCnDjC6D,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.766cbae3.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Title = styled.h1`\n    font-size: 40px;\n    font-weight: 700;\n    color: #35308f;\n    @media (max-width: 767px) and (orientation: portrait) {\n        margin-bottom: 15px;\n    }\n    @media (max-width: 767px) {\n        font-size: 32px;\n    }\n`;\n\nconst Header = () => {\n    return(\n        <Title>My TODO List</Title>\n    )\n};\n\nexport default Header;","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledForm = styled.form`\n    padding: 10px 20px 10px 37px;\n    @media (max-width: 767px) {\n        padding: 10px 10px 10px 27px;\n    }\n`;\nconst StyledInput = styled.input`\n    width: calc(100% - 110px);\n    display: inline-block;\n    vertical-align: top;\n    border: none;\n    box-shadow: none;\n    background-color: #F9F9F9;\n    border-radius: 4px;\n    font-size: 16px;\n    font-weight: 400;\n    font-family: 'Nunito', sans-serif;\n    padding: 0 12px;\n    height: 34px;\n    margin-right: 10px;\n    &::placeholder {\n        color: #757575;\n    }                                   \n    @media (max-width: 767px) {\n        width: calc(100% - 44px);\n    }\n`;\nconst StyledButton = styled.button`\n    width: 100px;\n    display: inline-block;\n    vertical-align: top;\n    background-color: #34a50f;\n    border: none;\n    font-size: 14px;\n    font-weight: 600;\n    color: #fff;\n    box-shadow: none;\n    line-height: 34px;\n    border-radius: 4px;\n    cursor: pointer;\n    transition: all .3s;\n    &:hover {\n        background-color: #2a890b;\n    }\n    @media (max-width: 767px) {\n        font-size: 0;\n        position: relative;\n        width: 34px;\n        &:after {\n            content: '\\\\f067';\n            font-family: FontAwesome;\n            font-size: 16px;\n            line-height: 36px;\n            color: #fff;\n            position: absolute;\n            left: 1px;\n            top: 0;\n            text-align: center;\n            width: 100%;\n            height: 100%;\n        }\n    }\n`;\nconst StyledLabel = styled.label`\n    flex: 1;\n    cursor: pointer;\n    padding: 0 15px 0 29px;\n    position: relative;\n    &:hover {\n        i {\n            border-color: #4fa441;\n        }\n    }\n    &.active {\n        color: #a7a7a7;\n        span {\n            text-decoration: line-through;\n        }\n        i {\n            background-color: #4fa441;\n            border-color: #4fa441;\n            &:before {\n                opacity: 1;\n            }\n        }\n    }\n`;\nconst StyledCheck = styled.i`\n    font-size: 12px;\n    line-height: 18px;\n    color: #fff;\n    position: absolute;\n    left: 0;\n    top: 0;\n    margin-top: 1px;\n    width: 19px;\n    height: 19px;\n    border-radius: 3px;\n    border: 1px solid #a7a7a7;\n    text-align: center;\n    z-index: 1;\n    transition: all .3s;\n    &:before {\n        opacity: 0;\n        z-index: 1;\n        transition: all .3s;\n    }\n`;\n\nexport const Form = (props) => <StyledForm {...props} />\nexport const Input = (props) => <StyledInput {...props} />\nexport const Button = (props) => <StyledButton {...props} />\nexport const Label = (props) => <StyledLabel {...props} />\nexport const IconCheck = (props) => <StyledCheck {...props} />","import React from 'react';\nimport { Label, IconCheck } from '../formStyles';\nimport styled from 'styled-components';\n\nconst ItemList = styled.li`\n    display: flex;\n    align-items: flex-start;\n    justify-content: space-between;\n    list-style-type: none;\n    border-top: 2px solid #f4f6fb;\n    padding: 14px 20px;\n    @media (max-width: 767px) {\n        padding: 14px 10px;\n    }\n`;\nconst IconEdit = styled.i`\n    font-size: 18px;\n    color: #a7a7a7;\n    cursor: pointer;\n    margin-left: 15px;\n    transition: all .3s ease;\n    &:hover {\n        color: ${props => props.delete ? \"#f80c0c\" : \"#302c83\"};\n    }\n`;\nconst ToggleDisabled = styled.div`\n    pointer-events: ${props => props.disabled ? \"none\": \"all\"};\n    opacity: ${props => props.disabled ? \".4\": \"1\"};\n`;\n\nconst TodoItem = ({ title, completed, edit, handleComplete, handleEdit, handleDelete }) => {\n    const activeClass = completed ? 'active' : '';\n    const disabledButtons = edit ? 'disabled' : '';\n    return(\n        <ItemList>\n            <Label className={activeClass}\n                   onClick={handleComplete}\n                   completed={ !!completed }>\n                <IconCheck className=\"fa fa-check\" />\n                <span>{title}</span>\n            </Label>\n            <ToggleDisabled disabled={disabledButtons}>\n                <button onClick={handleEdit}>\n                    <IconEdit className=\"fa fa-edit\" />\n                </button>\n                <button onClick={handleDelete}>\n                    <IconEdit delete className=\"fa fa-trash-o\" />\n                </button>\n            </ToggleDisabled>\n        </ItemList>\n    )\n};\n\nexport default TodoItem;","import React from 'react';\nimport styled from 'styled-components';\nimport TodoItem from \"../todo-item/todo-item\";\n\nconst ItemList = styled.li`\n    border-top: 2px solid #f4f6fb;\n    padding: 14px 49px;\n    @media (max-width: 767px) {\n        padding: 14px 39px;\n    }\n`;\n\nconst TodoList = ({ data, edit, handleComplete, handleEdit, handleDelete }) => {\n    const list = data.map(item => {\n        const { id, title } = item;\n\n        return(\n            <TodoItem key={id}\n                      edit={edit}\n                      {...item}\n                      handleComplete={() => handleComplete(id)}\n                      handleEdit={() => handleEdit(id, title)}\n                      handleDelete={() => handleDelete(id)}  />\n        )\n    });\n    return(\n        <div className=\"todo-list\">\n            <ul>\n                {list.length > 0 ? list : <ItemList>No tasks</ItemList>}\n            </ul>\n        </div>\n    )\n};\n\nexport default TodoList;","import React, { Component } from 'react';\nimport { Form, Input, Button } from '../formStyles';\n\nexport default class AddItemForm extends Component {\n    state = {\n      title: ''\n    };\n\n    handleInputChange = (e) => {\n        this.setState({\n            title: e.target.value\n        });\n    };\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        this.setState({\n            title: ''\n        });\n\n        this.props.onAddItem(this.state.title);\n    };\n\n    render() {\n        const { title } = this.state;\n        return(\n            <div className=\"new-item-list\">\n                <Form onSubmit={this.handleSubmit}>\n                    <Input type=\"text\"\n                           value={title}\n                           placeholder=\"Type your task\"\n                           onChange={this.handleInputChange}/>\n                    <Button>Add task</Button>\n                </Form>\n            </div>\n        )\n    }\n};","import React, { Component } from 'react';\nimport { Form, Button } from '../formStyles';\nimport styled from 'styled-components';\n\nconst StyledInput = styled.input`\n    width: calc(100% - 110px);\n    display: inline-block;\n    vertical-align: top;\n    border: none;\n    box-shadow: none;\n    background-color: #F9F9F9;\n    border-radius: 4px;\n    font-size: 16px;\n    font-weight: 400;\n    font-family: 'Nunito', sans-serif;\n    padding: 0 12px;\n    height: 34px;\n    margin-right: 10px;\n    &::placeholder {\n        color: #757575;\n    }                                   \n    @media (max-width: 767px) {\n        width: calc(100% - 44px);\n    }\n`;\nconst UpdateButton = styled(Button)`\n    @media (max-width: 767px) {\n        &:after {\n            content: '\\f021';\n        }\n    }\n`;\n\nexport default class UpdateItemForm extends Component {\n    inputRef = React.createRef();\n\n    componentDidMount(){\n        this.inputRef.current.focus();\n    }\n    HandleSubmit = (e) => {\n        e.preventDefault();\n\n        this.props.onEditItem(e.target.updatedInput.value);\n    };\n    render() {\n        return(\n            <div className=\"new-item-list\">\n                <Form onSubmit={ this.HandleSubmit }>\n                    <StyledInput type=\"text\"\n                           defaultValue={this.props.editTitle}\n                           name=\"updatedInput\"\n                           ref={ this.inputRef } />\n                    <UpdateButton update>Update task</UpdateButton>\n                </Form>\n            </div>\n        )\n    }\n};","import React from 'react';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n    background-color: transparent;\n    border: none;\n    padding: 10px 20px 13px;\n    display: inline-block;\n    vertical-align: top;\n    font-size: 16px;\n    font-weight: 600;\n    text-align: center;\n    border-radius: 4px;\n    color: ${props => props.active ? \"#302c83\" : \"#928fd3\"};\n    background-color: ${props => props.active ? \"#fff\" : \"transparent\"};\n    cursor: pointer;\n    transition: all .3s;\n    &:hover {\n        color: #302c83;\n    }\n    @media (max-width: 767px) {\n        padding: 7px 16px 10px;\n    }\n`;\nconst Amount = styled.sup`\n    padding-left: 3px;\n`;\n\n\nconst FilterButtons = ({ activeFilter, handleFilter, totalCount, completedCount }) => {\n    const buttons = [\n        {\n            id: 'all',\n            title: 'All',\n            amount: totalCount\n        },\n        {\n            id: 'active',\n            title: 'Active',\n            amount: totalCount - completedCount\n        },\n        {\n            id: 'completed',\n            title: 'Completed',\n            amount: completedCount\n        }\n    ];\n    return(\n        <div className=\"filter-tab\">\n            { buttons.map(({ id, title, amount }) => {\n                return (\n                    <Button key={id}\n                            id={id}\n                            className={id === activeFilter ? 'active' : ''}\n                            active={id === activeFilter}\n                            onClick={handleFilter} >\n                        {title}\n                        <Amount>{amount}</Amount>\n                    </Button>\n                )})\n            }\n        </div>\n    )\n};\n\nexport default FilterButtons;","import React from 'react';\nimport { Label, IconCheck } from '../formStyles';\nimport styled from 'styled-components';\n\nconst ManageButtons = styled.div`\n    padding: 20px 20px 0;\n    font-size: 14px;\n    @media (max-width: 767px) {\n        padding: 14px 10px;\n    }  \n`;\nconst CheckAll = styled(Label)`\n    &.active {\n        color: #4fa441;\n        span {\n            text-decoration: none;\n        }\n    }\n`;\nconst IconCheckSmall = styled(IconCheck)`\n    margin-top: 0;\n`;\nconst ClearButton = styled.button`\n    float: right;\n    color: #928fd3;\n    cursor: pointer;\n    transition: all .3s ease;\n    &:hover {\n        color: #f80c0c;\n    }\n`;\nconst IconClear = styled.i`\n    margin-right: 5px;\n    font-size: 12px;\n`;\n\nconst ManageComplete = ({handleCheck, handleClear, totalCount, completedCount}) => {\n    const activeClass = completedCount === totalCount ? 'active' : '';\n    return(\n        <ManageButtons>\n            { totalCount > 0 && (\n                <CheckAll className={activeClass}\n                          onClick={handleCheck} >\n                    <IconCheckSmall className=\"fa fa-check\" />\n                    Check all tasks\n                </CheckAll>\n            )}\n            { completedCount > 0 && (\n                <ClearButton onClick={handleClear}>\n                    <IconClear className=\"fa fa-times\" />\n                    Clear completed\n                </ClearButton>\n            )}\n        </ManageButtons>\n    )\n};\n\nexport default ManageComplete;","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Header from \"../header/header\";\nimport TodoList from \"../todo-list/todo-list\";\nimport AddItemForm from \"../add-item-form/add-item-form\";\nimport UpdateItemForm from \"../update-item-form/update-item-form\";\nimport FilterButtons from \"../filter-buttons/filter-buttons\";\nimport ManageComplete from '../manage-complete-buttons/manage-complete-buttons';\n\nimport './app.css';\n\nconst Wrapper = styled.div`\n    width: 830px;\n    max-width: 100%;\n    margin: 0 auto;\n    padding: 40px 15px;\n    @media (max-width: 767px) {\n        padding: 30px 15px;\n    }\n`;\nconst TopBlock = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-bottom: 30px;\n    padding-left: 20px;\n    @media (max-width: 767px) and (orientation: portrait) {\n        display: block;\n        margin-bottom: 20px;\n        padding-left: 10px;\n    }\n`;\nconst ContentBlock = styled.div`\n    background-color: #fff;\n    border-radius: 4px;\n    overflow: hidden;\n`;\n\nconst data = [\n    {\n        id: 1,\n        title: \"Delectus aut autem\",\n        completed: false\n    },\n    {\n        id: 2,\n        title: \"Quis ut nam facilis et officia qui\",\n        completed: false\n    },\n    {\n        id: 3,\n        title: \"Molestiae ipsa aut voluptatibus pariatur dolor nihil\",\n        completed: true\n    }\n];\n\nexport default class App extends Component {\n    state = {\n        data: [],\n        activeFilter: 'all',\n        edit: false,\n        editId: null,\n        editTitle: ''\n    };\n\n    componentDidMount(){\n        this.getData()\n    };\n\n    getData() {\n        if (!localStorage.getItem('todoData')) {\n            localStorage.setItem('todoData', JSON.stringify([...data]));\n            this.setState({\n                data: [...data]\n            });\n        }\n        else {\n            this.setState({\n                data: JSON.parse(localStorage.getItem('todoData'))\n            });\n        }\n    };\n\n    handleComplete = (id) => {\n        const { data } = this.state;\n        const index = data.findIndex(item => item.id === id);\n        data[index].completed = !data[index].completed;\n\n        this.setState({\n            data\n        });\n        localStorage.setItem('todoData', JSON.stringify(data));\n    };\n    handleDelete = (id) => {\n        const filteredData = this.state.data.filter(item => item.id !== id);\n\n        this.setState({\n            data: filteredData\n        });\n        localStorage.setItem('todoData', JSON.stringify(filteredData));\n    };\n    handleFilter = (e) => {\n        this.setState({\n            activeFilter: e.target.getAttribute(\"id\")\n        });\n    };\n    handleDataFilter() {\n        const { data, activeFilter } = this.state;\n        switch(activeFilter) {\n            case 'all' : return data;\n            case 'completed': return data.filter(item => item.completed);\n            case 'active': return data.filter(item => !item.completed);\n            default: return data;\n        }\n    };\n    handleAddItem = (title) => {\n        const renderId = + new Date();\n        const newItem = {\n            id: renderId,\n            title: title,\n            completed: false\n        };\n        newItem.key = renderId;\n\n        const newData = [newItem, ...this.state.data];\n        if(title.length !== 0) {\n            this.setState({\n                data: newData\n            });\n        }\n        localStorage.setItem('todoData', JSON.stringify(newData));\n    };\n    handleCheck = () => {\n        const checkedData = this.state.data.map(item => {\n            item.completed = true;\n            return item;\n        });\n\n        this.setState({\n            data: checkedData\n        });\n        localStorage.setItem('todoData', JSON.stringify(checkedData));\n    };\n    handleClear = () => {\n        const uncompletedData = this.state.data.filter(item => !item.completed);\n\n        this.setState({\n            data: uncompletedData\n        });\n        localStorage.setItem('todoData', JSON.stringify(uncompletedData));\n    };\n    handleEdit = (id, title) => {\n        this.setState({\n            edit: true,\n            editId: id,\n            editTitle: title\n        });\n    };\n    handleUpdate = (title) => {\n        const { data, editId } = this.state;\n        const index = data.findIndex(item => item.id === editId);\n        const oldItem = data[index];\n        const newItem = {...oldItem, title: title};\n        const newData = [\n            ...this.state.data.slice(0, index),\n            newItem,\n            ...this.state.data.slice(index + 1)\n        ];\n\n        this.setState({\n            data: newData,\n            edit: false\n        });\n        localStorage.setItem('todoData', JSON.stringify(newData));\n    };\n\n    render() {\n        const { data, activeFilter, edit, editTitle } = this.state;\n        const totalCount = data.length;\n        const completedCount = data.filter(item => item.completed).length;\n        let filteredData = this.handleDataFilter();\n\n        return(\n            <Wrapper>\n                <TopBlock>\n                    <Header />\n                    <FilterButtons activeFilter={activeFilter}\n                                   handleFilter={this.handleFilter}\n                                   totalCount={totalCount}\n                                   completedCount={completedCount} />\n                </TopBlock>\n                <ContentBlock>\n                    { edit ?\n                        <UpdateItemForm onEditItem={this.handleUpdate}\n                                        editTitle={editTitle} />\n                        : <AddItemForm onAddItem={this.handleAddItem} />\n                    }\n                    <TodoList data={filteredData}\n                              edit={edit}\n                              handleComplete={this.handleComplete}\n                              handleEdit={this.handleEdit}\n                              handleDelete={this.handleDelete} />\n                </ContentBlock>\n                <ManageComplete handleCheck={this.handleCheck}\n                                handleClear={this.handleClear}\n                                totalCount={totalCount}\n                                completedCount={completedCount} />\n            </Wrapper>\n        )\n    }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'font-awesome/css/font-awesome.min.css';\nimport App from './components/app/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}